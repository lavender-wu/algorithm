/**
 * 题目： 合并两个有序链表
 *      将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 
 *      输入：1->2->4, 1->3->4
 *      输出：1->1->2->3->4->4
 */

/**
 * 注意: 1.审题，入参两个都是升序列表，这就简单多了
 *        遍历第一个列表，将第二个列表第一个参数跟其比较
 *      2.链表的值是val (不要错写成value!!!)
 *      3. [1,([2,4], [1,2,3])] => [1, 1, ([2, 4],[3, 4])] =>[1, 1, 2, ([4], [3, 4])]
 *        =>[1, 1, 2, 3, ([4], [4])] => [1, 1, 2, 3, 4, ([4])] => [1, 1, 2, 3, 4, 4]
 */

var mergeTwoLists = (l1, l2) => {
  // 终止条件
  if (l2 === null) {
    return l1;
  }
  if (l1 === null) {
    return l2;
  }
  
  // 改变next 指针的指向之后，一定要返回结果链表，返回的链表是一个
  if (l1.value < l2.value) {
    l1.next = mergeTwoLists(l1.next, l2);
    return l1;
  } else {
    l2.next = mergeTwoLists(l2.next, l1);
    return l2;
  }

}
